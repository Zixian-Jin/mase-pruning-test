Script started on 2024-07-29 08:13:51+01:00 [TERM="xterm" TTY="/dev/pts/6" COLUMNS="158" LINES="48"]
]0;cj323@ee-kraken:~/mase-pruning-test[?2004h[cj323@ee-kraken mase-pruning-test]$ conda activate mase
[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ nano bert_inference.py 
[?2004l[?2004h[?1049h[22;0;0t[1;48r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[46;73H(B[0;7m[ Reading... ](B[m[46;71H(B[0;7m[ Read 252 lines ](B[m[H(B[0;7m  GNU nano 5.6.1                                                         bert_inference.py                                                                    [1;157H(B[m[47d(B[0;7m^G(B[m Help[47;18H(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is	   (B[0;7m^K(B[m Cut[47;69H(B[0;7m^T(B[m Execute[86G(B[0;7m^C(B[m Location[103G(B[0;7mM-U(B[m Undo[47;120H(B[0;7mM-A(B[m Set Mark     (B[0;7mM-](B[m To Bracket[48d(B[0;7m^X(B[m Exit[48;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace	   (B[0;7m^U(B[m Paste[48;69H(B[0;7m^J(B[m Justify[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[48;120H(B[0;7mM-6(B[m Copy[48;137H(B[0;7m^Q(B[m Where Was[2d(B[0;1m[36mimport[39m(B[m torch[3d(B[0;1m[36mimport[39m(B[m numpy (B[0;1m[36mas[39m(B[m np[4d(B[0;1m[36mfrom[39m(B[m datasets (B[0;1m[36mimport[39m(B[m load_dataset[5d(B[0;1m[36mfrom[39m(B[m transformers (B[0;1m[36mimport[39m(B[m BertTokenizer, BertModel, AdamW[6d(B[0;1m[36mfrom[39m(B[m torch.utils.data (B[0;1m[36mimport[39m(B[m DataLoader, Dataset[8d(B[0;1m[36mimport[39m(B[m utils[9d(B[0;1m[36mimport[39m(B[m rank_functions[11d(B[0;1m[36mclass[39m(B[m BertDataset(Dataset):[12;5H(B[0;1m[36mdef[34m __init__[39m(B[m(self, split):[13;9Hself.dataset = load_dataset(path=(B[0;1m[32m'lansinuote/ChnSentiCorp'[39m(B[m, split=split)[15;5H(B[0;1m[36mdef[34m __len__[39m(B[m(self):[16;9H(B[0;1m[36mreturn[39m(B[m len(self.dataset)[18;5H(B[0;1m[36mdef[34m __getitem__[39m(B[m(self, i):[19;9Htext = self.dataset[i][(B[0;1m[32m'text'[39m(B[m][20;9Hlabel = self.dataset[i][(B[0;1m[32m'label'[39m(B[m][21;9H(B[0;1m[36mreturn[39m(B[m text, label[24d[42m    [25d(B[0;1m[31m# print(len(loader))[26d# input_ids.shape, attention_mask.shape, token_type_ids.shape, labels[27d#æ¨¡åž‹è¯•ç®—[28d# out = pretrained(input_ids=input_ids,[29d#            attention_mask=attention_mask,[30d#            token_type_ids=token_type_ids)[31d# out.last_hidden_state.shape[38d[36mclass[39m(B[m DownstreamModel(torch.nn.Module):[39;5H(B[0;1m[36mdef[34m __init__[39m(B[m(self):[40;9Hsuper().__init__()[41;8H(B[0;1m[31m # print(len(dataset), dataset[0])[42;9H[39m(B[mself.tokenizer = BertTokenizer.from_pretrained((B[0;1m[32m'bert-base-chinese'[39m(B[m)[43;9Hself.pretrained = BertModel.from_pretrained((B[0;1m[32m'bert-base-chinese'[39m(B[m)[44;9Hself.pretrained.to(device)(B[0;1m[31m # [37m[43mTODO[45;12H[39;49m[31m # pretrained = BertModel.from_pretrained('tmp')  # local checkpoint[2d[39m(B[m[?12l[?25h[?25l[47;18H[14X[47;32H(B[0;7mM-C(B[m Case Sens 	              (B[0;7mM-B(B[m Backwards   [86G        (B[0;7m^P(B[m Older         [47;120H     (B[0;7m^T(B[m Go To Line[K[48;2H(B[0;7mC(B[m Cancel[48;18H[14X[48;32H(B[0;7mM-R(B[m Reg.exp. 	              (B[0;7m^R(B[m Replace      [86G        (B[0;7m^N(B[m Newer[K[47;138H[A(B[0;7mSearch:                                                                                                                                                       [46;9H(B[m[?12l[?25h[?25l(B[0;7mw(B[m[?12l[?25h[?25l(B[0;7me(B[m[?12l[?25h[?25l(B[0;7mi(B[m[?12l[?25h[?25l(B[0;7mg(B[m[?12l[?25h[?25l(B[0;7mh(B[m[?12l[?25h[?25l(B[0;7mt(B[m[?12l[?25h[?25l(B[0;7ms(B[m[?12l[?25h[?25l(B[0;7m_(B[m[?12l[?25h[?25l(B[0;7mt(B[m[?12l[?25h[?25l(B[0;7mo(B[m[?12l[?25h[?25l[K[47;18H(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is	   (B[0;7m^K(B[m Cut           (B[0;7m^T(B[m Execute[86G(B[0;7m^C(B[m Location      (B[0;7mM-U(B[m Undo[47;120H(B[0;7mM-A(B[m Set Mark     (B[0;7mM-](B[m To Bracket[48;2H(B[0;7mX(B[m Exit  [48;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace	   (B[0;7m^U(B[m Paste         (B[0;7m^J(B[m Justify[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[48;120H(B[0;7mM-6(B[m Copy[48;137H(B[0;7m^Q(B[m Where Was[2;12H[1K self.structured_prune(module)[3d[K[4d[K[5d(B[0;1m[36mif[39m(B[m __name__ == (B[0;1m[32m'__main__'[39m(B[m:[K[6d    device = (B[0;1m[32m'cuda'[39m(B[m (B[0;1m[36mif[39m(B[m torch.cuda.is_available() (B[0;1m[36melse[39m(B[m (B[0;1m[32m'cpu'[31m # [37m[43mTODO[7;5H[39;49m(B[mprune_config = {[8;12H[1K (B[0;1m[32m"module"[39m(B[m: (B[0;1m[35mNone[39m(B[m,[9;12H[1K (B[0;1m[32m"scope"[39m(B[m: (B[0;1m[32m"local"[39m(B[m,[10;13H(B[0;1m[32m"block_num"[39m(B[m: 64,[11;12H[1K (B[0;1m[32m"sparsity"[39m(B[m: 0.5[12;5H}[K[13dmodel = DownstreamModel()[K[14;5Hmodel.to(device)[15;4H(B[0;1m[31m # prune_config['module'] = "fc1"[16;5H[39m(B[mmodule = model.pretrained.encoder.layer._modules[(B[0;1m[32m'0'[39m(B[m].attention.self.query.weight.detach()[17;4H(B[0;1m[31m # model.downstream_train()[18d(B[0m[42m    [49m(B[m[K[19dmodel.load_downstream_model()[K[20;4H(B[0;1m[31m # model.check_sparsity(module=model.fc1)[21;5H[39m(B[macc_1 = model.downstream_test()[22d[42m    [23d[49m(B[mlayers_to_prune = list(range(12))[24d    [30m[43mweights_to[39;49m(B[m_prune = [(B[0;1m[32m'Q'[39m(B[m, (B[0;1m[32m'K'[39m(B[m, (B[0;1m[32m'V'[39m(B[m][25d[42m    [49m(B[m[K[26d    print((B[0;1m[32m'Pruing Configuraitons:'[39m(B[m)[K[27d    print((B[0;1m[32m'Block_num='[39m(B[m, prune_config[(B[0;1m[32m'block_num'[39m(B[m])[28d    print((B[0;1m[32m'Layers to prune='[39m(B[m, layers_to_prune)[29d    print((B[0;1m[32m'Weights to prune='[39m(B[m, weights_to_prune)[30d   (B[0;1m[31m # for i in [0.7, 0.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[31d[39m(B[m    (B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m [0.9, 0.95, 0.98, 1.00]:[32;9Hprint((B[0;1m[32m'========== Prune after training ==========='[39m(B[m)[33;9Hmodel.load_downstream_model()[34;9Hprint((B[0;1m[32m"Sparsity=%f"[39m(B[m%i)[35;9Hprune_config = {[36;13H(B[0;1m[32m"module"[39m(B[m: (B[0;1m[32m'fc1'[39m(B[m,[37;13H(B[0;1m[32m"scope"[39m(B[m: (B[0;1m[32m"local"[39m(B[m,[38;12H[1K (B[0;1m[32m"block_num"[39m(B[m: 64,[K[39;12H[1K (B[0;1m[32m"sparsity"[39m(B[m: i[40;9H}[K[41;11H(B[0;1m[31mmodel.structured_prune(module=model.fc1)[42;9H[39m(B[mmodel.bert_attention_prune(layers_to_prune, weights_to_prune)[K[43;9Hacc_2 = model.downstream_test()[K[44;9Hprint(f(B[0;1m[32m"Before pruning: acc={acc_1}. After pruning: acc={acc_2}."[39m(B[m)[45d[K[24;5Hweights_to[6G[?12l[?25h[?25le[?12l[?25h[?25li[?12l[?25h[?25l	[?12l[?25h[?25lh[?12l[?25h[?25lt[?12l[?25h[?25ls[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lo[?12l[?25h[?25l_[?12l[?25h[?25l	[?12l[?25h[?25lr[?12l[?25h[?25lu[?12l[?25h[?25ln[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25l	[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[1;149H(B[0;7mModified(B[m[24;27H(B[0;1m[32m]'[39m(B[m, (B[0;1m[32m'K'[39m(B[m, (B[0;1m[32m'V'[39m(B[m][24;28H[?12l[?25h[?25l(B[0;1m[32m '[39m(B[m, (B[0;1m[32m'K'[39m(B[m, (B[0;1m[32m'V'[39m(B[m][24;29H[?12l[?25h[?25l(B[0;1m[31m #', 'K', 'V'][24;30H[39m(B[m[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l(B[0;1m[32m'[39m(B[m](B[0;1m[31m #', 'K', 'V'][24;28H[39m(B[m[?12l[?25h[?25l[46d(B[0;7mSave modified buffer?                                                                                                                                         [47;1H Y(B[m Yes[K[48d(B[0;7m N(B[m No  [48;17H(B[0;7m^C(B[m Cancel[K[46;23H[?12l[?25h[?25l[47d(B[0;7m^G(B[m Help[47;40H(B[0;7mM-D(B[m DOS Format[47;79H(B[0;7mM-A(B[m Append[47;118H(B[0;7mM-B(B[m Backup File[48d(B[0;7m^C(B[m Cancel	         [48;40H(B[0;7mM-M(B[m Mac Format[48;79H(B[0;7mM-P(B[m Prepend[48;118H(B[0;7m^T(B[m Browse[46d(B[0;7mFile Name to Write: bert_inference.py(B[m[?12l[?25h[?25l[46;72H[1K	(B[0;7m[ Writing... ](B[m[K[1;149H(B[0;7m        (B[m[46;70H(B[0;7m[ Wrote 252 lines ](B[m[J[48d[?12l[?25h[48;1H[?1049l[23;0;0t[?1l>[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ 
[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ 
[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ py[K[Kpython bert_inference.py 
[?2004lA parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
INFO: loaded downstream model from ./ckpts/downstream_model_unpruned.pth
Pruing Configuraitons:
Block_num= 64
Layers to prune= [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Weights to prune= ['Q']
========== Prune after training ===========
INFO: loaded downstream model from ./ckpts/downstream_model_unpruned.pth
Sparsity=0.900000
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...

INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
^CTraceback (most recent call last):
  File "/mnt/home/cj323/mase-pruning-test/bert_inference.py", line 249, in <module>
    model.bert_attention_prune(layers_to_prune, weights_to_prune)
  File "/mnt/home/cj323/mase-pruning-test/bert_inference.py", line 209, in bert_attention_prune
    self.structured_prune(module)
  File "/mnt/home/cj323/mase-pruning-test/bert_inference.py", line 185, in structured_prune
    mask = rank_functions.block_rank_fn_local(data, prune_config, sparsity, silent=silent)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/cj323/mase-pruning-test/rank_functions.py", line 66, in block_rank_fn_local
    element_mask[i][j] = 0 if (block_mask[i][block_id] == 0) else 1
    ~~~~~~~~~~~~~~~^^^
KeyboardInterrupt
^C^C
]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ 
[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ nano bert_inference.py [K
[?2004l[?2004h[?1049h[22;0;0t[1;48r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[46;73H(B[0;7m[ Reading... ](B[m[46;71H(B[0;7m[ Read 252 lines ](B[m[H(B[0;7m  GNU nano 5.6.1                                                         bert_inference.py                                                                    [1;157H(B[m[47d(B[0;7m^G(B[m Help[47;18H(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is	   (B[0;7m^K(B[m Cut[47;69H(B[0;7m^T(B[m Execute[86G(B[0;7m^C(B[m Location[103G(B[0;7mM-U(B[m Undo[47;120H(B[0;7mM-A(B[m Set Mark     (B[0;7mM-](B[m To Bracket[48d(B[0;7m^X(B[m Exit[48;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace	   (B[0;7m^U(B[m Paste[48;69H(B[0;7m^J(B[m Justify[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[48;120H(B[0;7mM-6(B[m Copy[48;137H(B[0;7m^Q(B[m Where Was[2d(B[0;1m[36mimport[39m(B[m torch[3d(B[0;1m[36mimport[39m(B[m numpy (B[0;1m[36mas[39m(B[m np[4d(B[0;1m[36mfrom[39m(B[m datasets (B[0;1m[36mimport[39m(B[m load_dataset[5d(B[0;1m[36mfrom[39m(B[m transformers (B[0;1m[36mimport[39m(B[m BertTokenizer, BertModel, AdamW[6d(B[0;1m[36mfrom[39m(B[m torch.utils.data (B[0;1m[36mimport[39m(B[m DataLoader, Dataset[8d(B[0;1m[36mimport[39m(B[m utils[9d(B[0;1m[36mimport[39m(B[m rank_functions[11d(B[0;1m[36mclass[39m(B[m BertDataset(Dataset):[12;5H(B[0;1m[36mdef[34m __init__[39m(B[m(self, split):[13;9Hself.dataset = load_dataset(path=(B[0;1m[32m'lansinuote/ChnSentiCorp'[39m(B[m, split=split)[15;5H(B[0;1m[36mdef[34m __len__[39m(B[m(self):[16;9H(B[0;1m[36mreturn[39m(B[m len(self.dataset)[18;5H(B[0;1m[36mdef[34m __getitem__[39m(B[m(self, i):[19;9Htext = self.dataset[i][(B[0;1m[32m'text'[39m(B[m][20;9Hlabel = self.dataset[i][(B[0;1m[32m'label'[39m(B[m][21;9H(B[0;1m[36mreturn[39m(B[m text, label[24d[42m    [25d(B[0;1m[31m# print(len(loader))[26d# input_ids.shape, attention_mask.shape, token_type_ids.shape, labels[27d#æ¨¡åž‹è¯•ç®—[28d# out = pretrained(input_ids=input_ids,[29d#            attention_mask=attention_mask,[30d#            token_type_ids=token_type_ids)[31d# out.last_hidden_state.shape[38d[36mclass[39m(B[m DownstreamModel(torch.nn.Module):[39;5H(B[0;1m[36mdef[34m __init__[39m(B[m(self):[40;9Hsuper().__init__()[41;8H(B[0;1m[31m # print(len(dataset), dataset[0])[42;9H[39m(B[mself.tokenizer = BertTokenizer.from_pretrained((B[0;1m[32m'bert-base-chinese'[39m(B[m)[43;9Hself.pretrained = BertModel.from_pretrained((B[0;1m[32m'bert-base-chinese'[39m(B[m)[44;9Hself.pretrained.to(device)(B[0;1m[31m # [37m[43mTODO[45;12H[39;49m[31m # pretrained = BertModel.from_pretrained('tmp')  # local checkpoint[2d[39m(B[m[?12l[?25h[?25l[47;18H[14X[47;32H(B[0;7mM-C(B[m Case Sens 	              (B[0;7mM-B(B[m Backwards   [86G        (B[0;7m^P(B[m Older         [47;120H     (B[0;7m^T(B[m Go To Line[K[48;2H(B[0;7mC(B[m Cancel[48;18H[14X[48;32H(B[0;7mM-R(B[m Reg.exp. 	              (B[0;7m^R(B[m Replace      [86G        (B[0;7m^N(B[m Newer[K[47;138H[A(B[0;7mSearch:                                                                                                                                                       [46;9H(B[m[?12l[?25h[?25l(B[0;7mf(B[m[?12l[?25h[?25l(B[0;7mo(B[m[?12l[?25h[?25l(B[0;7mr(B[m[?12l[?25h[?25l[C[?12l[?25h[?25l(B[0;7mi(B[m[?12l[?25h[?25l[C[?12l[?25h[?25l(B[0;7mi(B[m[?12l[?25h[?25l(B[0;7mn(B[m[?12l[?25h[?25l[C[?12l[?25h[?25l[K[47;18H(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is	   (B[0;7m^K(B[m Cut           (B[0;7m^T(B[m Execute[86G(B[0;7m^C(B[m Location      (B[0;7mM-U(B[m Undo[47;120H(B[0;7mM-A(B[m Set Mark     (B[0;7mM-](B[m To Bracket[48;2H(B[0;7mX(B[m Exit  [48;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace	   (B[0;7m^U(B[m Paste         (B[0;7m^J(B[m Justify[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[48;120H(B[0;7mM-6(B[m Copy[48;137H(B[0;7m^Q(B[m Where Was[2;8H[1K	super().__init__()[3;7H[1K (B[0;1m[31m # print(len(dataset), dataset[0])[4;8H[39m(B[m[1K	self.tokenizer = BertTokenizer.from_pretrained((B[0;1m[32m'bert-base-chinese'[39m(B[m)[5;8H[1K	self.pretrained = BertModel.from_pretrained((B[0;1m[32m'bert-base-chinese'[39m(B[m)[6;8H[1K	self.pretrained.to(device)(B[0;1m[31m # [37m[43mTODO[39;49m(B[m[K[7;12H(B[0;1m[31m # pretrained = BertModel.from_pretrained('tmp')  # local checkpoint[8;7H[39m(B[m[1K (B[0;1m[31m # inactivate grad for Bert params[9;8H[39m(B[m[1K	(B[0;1m[36mfor[39m(B[m param (B[0;1m[36min[39m(B[m self.pretrained.parameters():[10;13Hparam.requires_grad_((B[0;1m[35mFalse[39m(B[m)[11d[K[12;5H    self.init_dataset()[K[13;14Hinit_dataloader()[K[14;9Hself.fc1 = torch.nn.Linear(768, 192)[15;5H    self.fc2 = torch.nn.Linear(192, 2)[16d[42m    [49m(B[m[K[17d(B[0;1m[36mdef[34m init_dataset[39m(B[m(self):[18;5H    self.train_dataset = BertDataset((B[0;1m[32m'train'[39m(B[m)[19;9Hself.val_dataset = BertDataset((B[0;1m[32m'test'[39m(B[m)[20d[K[21;5H(B[0;1m[36mdef[34m init_dataloader[39m(B[m(self):[22;9H(B[0;1m[36mdef[34m collate_fn[39m(B[m(data):[23;13Htokenizer = self.tokenizer[24;12H[1K sents = [i[0] [30m[43mfor i in [39;49m(B[mdata][25;12H[1K labels = [i[1] (B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m data][26d[K[27;11H[1K (B[0;1m[31m # encoding[28;12H[39m(B[m[1K data = tokenizer.batch_encode_plus(batch_text_or_text_pairs=sents,[29;40H[1K	truncation=(B[0;1m[35mTrue[39m(B[m,[30;40H[1K	padding=(B[0;1m[32m'max_length'[39m(B[m,[31;40H[1K	max_length=500,[32;41Hreturn_tensors=(B[0;1m[32m'pt'[39m(B[m,[33;41Hreturn_length=(B[0;1m[35mTrue[39m(B[m)[34;12H(B[0;1m[31m #input_ids: ids after encoding[35;13H[39m(B[minput_ids = data[(B[0;1m[32m'input_ids'[39m(B[m].to(device)[36;13Hattention_mask = data[(B[0;1m[32m'attention_mask'[39m(B[m].to(device)[37;13Htoken_type_ids = data[(B[0;1m[32m'token_type_ids'[39m(B[m].to(device)[38;12H[1K labels = torch.LongTensor(labels).to(device)[39;11H[1K (B[0;1m[31m #print(data['length'], data['length'].max())[40d[39m(B[m[K[41;12H[1K (B[0;1m[36mreturn[39m(B[m input_ids, attention_mask, token_type_ids, labels[42d[K[43;14Htrain_dataloader = DataLoader(dataset=self.train_dataset,[K[44;44H[1K batch_size=16,[45;44H[1K collate_fn=collate_fn,[K[24;27H[47;18H[14X[47;32H(B[0;7mM-C(B[m Case Sens 	              (B[0;7mM-B(B[m Backwards   [86G        (B[0;7m^P(B[m Older         [47;120H     (B[0;7m^T(B[m Go To Line[K[48;2H(B[0;7mC(B[m Cancel[48;18H[14X[48;32H(B[0;7mM-R(B[m Reg.exp. 	              (B[0;7m^R(B[m Replace      [86G        (B[0;7m^N(B[m Newer[K[47;138H[A(B[0;7mSearch [for i in ]:                                                                                                                                           [46;21H(B[m[?12l[?25h[?25l(B[0;7mm(B[m[?12l[?25h[?25l(B[0;7ma(B[m[?12l[?25h[?25l(B[0;7mi(B[m[?12l[?25h[?25l(B[0;7mn(B[m[?12l[?25h[?25l[K[47;18H(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is	   (B[0;7m^K(B[m Cut           (B[0;7m^T(B[m Execute[86G(B[0;7m^C(B[m Location      (B[0;7mM-U(B[m Undo[47;120H(B[0;7mM-A(B[m Set Mark     (B[0;7mM-](B[m To Bracket[48;2H(B[0;7mX(B[m Exit  [48;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace	   (B[0;7m^U(B[m Paste         (B[0;7m^J(B[m Justify[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[48;120H(B[0;7mM-6(B[m Copy[48;137H(B[0;7m^Q(B[m Where Was[2;5H(B[0;1m[36mdef[34m bert_attention_prune[39m(B[m(self, layer_list, weight_list):[3;8H (B[0;1m[32m'''[39m(B[m[K[4d(B[0;1m[32m[1K Ex. layer_list = [0, 1, 3][39m(B[m[K[5;12H(B[0;1m[32m[1K weight_list = ['Q', 'K'][39m(B[m[K[6;8H(B[0;1m[32m[1K	'''[39m(B[m[K[7d	modules_to_prune = [][K[8;8H[42m[1K	[49m(B[m[K[9;13Hlayer (B[0;1m[36min[39m(B[m layer_list:[K[10;13H(B[0;1m[36mfor[39m(B[m weight (B[0;1m[36min[39m(B[m weight_list:[K[11;17H(B[0;1m[36mif[39m(B[m weight == (B[0;1m[32m'Q'[39m(B[m:[12;20H[1K modules_to_prune.append(self.pretrained.encoder.layer._modules[str(layer)].attention.self.query)[13;16H[1K	(B[0;1m[36melif[39m(B[m weight == (B[0;1m[32m'K'[39m(B[m:[14;20H[1K modules_to_prune.append(self.pretrained.encoder.layer._modules[str(layer)].attention.self.key)[15;16H[1K	(B[0;1m[36melif[39m(B[m weight == (B[0;1m[32m'V'[39m(B[m:[K[16;20H[1K modules_to_prune.append(self.pretrained.encoder.layer._modules[str(layer)].attention.self.value)[17;16H[1K	(B[0;1m[36melse[39m(B[m:[K[18d[1K print((B[0;1m[32m'WARNING: Invalid pruned weight has been ignored.'[39m(B[m)[19;8H[42m[1K	[49m(B[m[K[20d(B[0;1m[36mfor[39m(B[m module (B[0;1m[36min[39m(B[m modules_to_prune:[21;12H[1K self.structured_prune(module)[22d[K[23d[K[24d(B[0;1m[36mif[39m(B[m __name__ == (B[0;1m[32m'__(B[0m[30m[43mmain(B[0;1m[32m__'[39m(B[m:[K[25;5Hdevice = (B[0;1m[32m'cuda'[39m(B[m (B[0;1m[36mif[39m(B[m torch.cuda.is_available() (B[0;1m[36melse[39m(B[m (B[0;1m[32m'cpu'[31m # [37m[43mTODO[26;5H[39;49m(B[mprune_config = {[27;12H (B[0;1m[32m"module"[39m(B[m: (B[0;1m[35mNone[39m(B[m,[28;13H(B[0;1m[32m"scope"[39m(B[m: (B[0;1m[32m"local"[39m(B[m,[K[29;13H(B[0;1m[32m"block_num"[39m(B[m: 64,[K[30;13H(B[0;1m[32m"sparsity"[39m(B[m: 0.5[K[31;5H}[K[32dmodel = DownstreamModel()[K[33;5Hmodel.to(device)[K[34;4H(B[0;1m[31m # prune_config['module'] = "fc1"[39m(B[m[K[35;5Hmodule = model.pretrained.encoder.layer._modules[(B[0;1m[32m'0'[39m(B[m].attention.self.query.weight.detach()[36;4H(B[0;1m[31m # model.downstream_train()[39m(B[m[K[37d[42m    [49m(B[m[K[38dmodel.load_downstream_model()[K[39;4H(B[0;1m[31m # model.check_sparsity(module=model.fc1)[39m(B[m[K[40;5Hacc_1 = model.downstream_test()[41d[42m    [49m(B[m[K[42dlayers_to_prune = list(range(12))[43;5Hweights_to_prune = [(B[0;1m[32m'Q'[39m(B[m](B[0;1m[31m #', 'K', 'V'][39m(B[m[K[44d[42m    [49m(B[m[K[45dprint((B[0;1m[32m'Pruing Configuraitons:'[39m(B[m)[K[24;19H(B[0;1m[32mmain[25;19H[39m(B[m[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31;6H[?12l[?25h[?25l[32;19H[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37;5H[?12l[?25h[?25l[38;19H[?12l[?25h[?25l[39d[?12l[?25h[?25l[40d[?12l[?25h[?25l[41;5H[?12l[?25h[?25l[42;19H[?12l[?25h[?25l[43d[?12l[?25h[?25l[44;5H[?12l[?25h[?25l[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;5Hprint((B[0;1m[32m'Block_num='[39m(B[m, prune_config[(B[0;1m[32m'block_num'[39m(B[m])[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;5Hprint((B[0;1m[32m'Layers to prune='[39m(B[m, layers_to_prune)[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;5Hprint((B[0;1m[32m'Weights to prune='[39m(B[m, weights_to_prune)[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;4H(B[0;1m[31m # for i in [0.7, 0.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[45;19H[39m(B[m[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;5H(B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m [0.9, 0.95, 0.98, 1.00]:[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9Hprint((B[0;1m[32m'========== Prune after training ==========='[39m(B[m)[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9Hmodel.load_downstream_model()[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9Hprint((B[0;1m[32m"Sparsity=%f"[39m(B[m%i)[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9Hprune_config = {[19G[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;13H(B[0;1m[32m"module"[39m(B[m: (B[0;1m[32m'fc1'[39m(B[m,[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;13H(B[0;1m[32m"scope"[39m(B[m: (B[0;1m[32m"local"[39m(B[m,[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;13H(B[0;1m[32m"block_num"[39m(B[m: 64,[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;13H(B[0;1m[32m"sparsity"[39m(B[m: i[19G[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9H}[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;8H(B[0;1m[31m # model.structured_prune(module=model.fc1)[45;19H[39m(B[m[?12l[?25h[?25l[44;10H[?12l[?25h[?25l[43;19H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[34d[?12l[?25h[?25l[?12l[?25h[?25l[Z[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l	[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;149H(B[0;7mModified(B[m[34;6H[1P[?12l[?25h[?25l (B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m [0.7, 0.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[K[5G[?12l[?25h[?25l[35d[?12l[?25h[?25l(B[0;1m[31m #for i in [0.9, 0.95, 0.98, 1.00]:[6G[39m(B[m[?12l[?25h[?25l(B[0;1m[31m for i in [0.9, 0.95, 0.98, 1.00]:[7G[39m(B[m[?12l[?25h[?25l[A[?12l[?25h[?25l[C[?12l[?25h[?25l	[?12l[?25h[?25li[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l[[?12l[?25h[?25l0[?12l[?25h[?25l	[?12l[?25h[?25l7[?12l[?25h[?25l[Z[1P[?12l[?25h[?25l5, 0.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[34;18H[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25l0[?12l[?25h[?25l.[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l00.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[34;21H[?12l[?25h[?25l.0.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[34;22H[?12l[?25h[?25l60.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[34;23H[?12l[?25h[?25l,0.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[34;24H[?12l[?25h[?25l 0.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[34;25H[?12l[?25h[?25l00.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[34;26H[?12l[?25h[?25l.0.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[34;27H[?12l[?25h[?25l70.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[34;28H[?12l[?25h[?25l,0.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[34;29H[?12l[?25h[?25l 0.8, 0.9, 0.92, 0.95, 0.98, 1.00]:[34;30H[?12l[?25h[?25l0[?12l[?25h[?25l.[?12l[?25h[?25l	[?12l[?25h[?25l,[?12l[?25h[?25l[Z[1P[?12l[?25h[?25l] 0.9, 0.92, 0.95, 0.98, 1.00]:[34;34H[?12l[?25h[?25l  0.9, 0.92, 0.95, 0.98, 1.00]:[34;35H[?12l[?25h[?25l(B[0;1m[31m # 0.9, 0.92, 0.95, 0.98, 1.00]:[34;36H[39m(B[m[?12l[?25h[?25l[46d(B[0;7mSave modified buffer?                                                                                                                                         [47;1H Y(B[m Yes[K[48d(B[0;7m N(B[m No  [48;17H(B[0;7m^C(B[m Cancel[K[46;23H[?12l[?25h[?25l[47d(B[0;7m^G(B[m Help[47;40H(B[0;7mM-D(B[m DOS Format[47;79H(B[0;7mM-A(B[m Append[47;118H(B[0;7mM-B(B[m Backup File[48d(B[0;7m^C(B[m Cancel	         [48;40H(B[0;7mM-M(B[m Mac Format[48;79H(B[0;7mM-P(B[m Prepend[48;118H(B[0;7m^T(B[m Browse[46d(B[0;7mFile Name to Write: bert_inference.py(B[m[?12l[?25h[?25l[46;72H[1K	(B[0;7m[ Writing... ](B[m[K[1;149H(B[0;7m        (B[m[46;70H(B[0;7m[ Wrote 252 lines ](B[m[J[48d[?12l[?25h[48;1H[?1049l[23;0;0t[?1l>[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ 
[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ 
[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ python bert_inference.py 
[?2004l  File "/mnt/home/cj323/mase-pruning-test/bert_inference.py", line 237
    for i in [0.5, 0.6, 0.7, 0.8] # 0.9, 0.92, 0.95, 0.98, 1.00]:
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: expected ':'
]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ nano bert_inference.py 
[?2004l[?2004h[?1049h[22;0;0t[1;48r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[46;73H(B[0;7m[ Reading... ](B[m[46;71H(B[0;7m[ Read 252 lines ](B[m[H(B[0;7m  GNU nano 5.6.1                                                         bert_inference.py                                                                    [1;157H(B[m[47d(B[0;7m^G(B[m Help[47;18H(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is	   (B[0;7m^K(B[m Cut[47;69H(B[0;7m^T(B[m Execute[86G(B[0;7m^C(B[m Location[103G(B[0;7mM-U(B[m Undo[47;120H(B[0;7mM-A(B[m Set Mark     (B[0;7mM-](B[m To Bracket[48d(B[0;7m^X(B[m Exit[48;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace	   (B[0;7m^U(B[m Paste[48;69H(B[0;7m^J(B[m Justify[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[48;120H(B[0;7mM-6(B[m Copy[48;137H(B[0;7m^Q(B[m Where Was[2d(B[0;1m[36mimport[39m(B[m torch[3d(B[0;1m[36mimport[39m(B[m numpy (B[0;1m[36mas[39m(B[m np[4d(B[0;1m[36mfrom[39m(B[m datasets (B[0;1m[36mimport[39m(B[m load_dataset[5d(B[0;1m[36mfrom[39m(B[m transformers (B[0;1m[36mimport[39m(B[m BertTokenizer, BertModel, AdamW[6d(B[0;1m[36mfrom[39m(B[m torch.utils.data (B[0;1m[36mimport[39m(B[m DataLoader, Dataset[8d(B[0;1m[36mimport[39m(B[m utils[9d(B[0;1m[36mimport[39m(B[m rank_functions[11d(B[0;1m[36mclass[39m(B[m BertDataset(Dataset):[12;5H(B[0;1m[36mdef[34m __init__[39m(B[m(self, split):[13;9Hself.dataset = load_dataset(path=(B[0;1m[32m'lansinuote/ChnSentiCorp'[39m(B[m, split=split)[15;5H(B[0;1m[36mdef[34m __len__[39m(B[m(self):[16;9H(B[0;1m[36mreturn[39m(B[m len(self.dataset)[18;5H(B[0;1m[36mdef[34m __getitem__[39m(B[m(self, i):[19;9Htext = self.dataset[i][(B[0;1m[32m'text'[39m(B[m][20;9Hlabel = self.dataset[i][(B[0;1m[32m'label'[39m(B[m][21;9H(B[0;1m[36mreturn[39m(B[m text, label[24d[42m    [25d(B[0;1m[31m# print(len(loader))[26d# input_ids.shape, attention_mask.shape, token_type_ids.shape, labels[27d#æ¨¡åž‹è¯•ç®—[28d# out = pretrained(input_ids=input_ids,[29d#            attention_mask=attention_mask,[30d#            token_type_ids=token_type_ids)[31d# out.last_hidden_state.shape[38d[36mclass[39m(B[m DownstreamModel(torch.nn.Module):[39;5H(B[0;1m[36mdef[34m __init__[39m(B[m(self):[40;9Hsuper().__init__()[41;8H(B[0;1m[31m # print(len(dataset), dataset[0])[42;9H[39m(B[mself.tokenizer = BertTokenizer.from_pretrained((B[0;1m[32m'bert-base-chinese'[39m(B[m)[43;9Hself.pretrained = BertModel.from_pretrained((B[0;1m[32m'bert-base-chinese'[39m(B[m)[44;9Hself.pretrained.to(device)(B[0;1m[31m # [37m[43mTODO[45;12H[39;49m[31m # pretrained = BertModel.from_pretrained('tmp')  # local checkpoint[2d[39m(B[m[?12l[?25h[?25l[47;18H[14X[47;32H(B[0;7mM-C(B[m Case Sens 	              (B[0;7mM-B(B[m Backwards   [86G        (B[0;7m^P(B[m Older         [47;120H     (B[0;7m^T(B[m Go To Line[K[48;2H(B[0;7mC(B[m Cancel[48;18H[14X[48;32H(B[0;7mM-R(B[m Reg.exp. 	              (B[0;7m^R(B[m Replace      [86G        (B[0;7m^N(B[m Newer[K[47;138H[A(B[0;7mSearch:                                                                                                                                                       [46;9H(B[m[?12l[?25h[?25l(B[0;7mm(B[m[?12l[?25h[?25l(B[0;7ma(B[m[?12l[?25h[?25l(B[0;7mi(B[m[?12l[?25h[?25l(B[0;7mn(B[m[?12l[?25h[?25l[K[47;18H(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is	   (B[0;7m^K(B[m Cut           (B[0;7m^T(B[m Execute[86G(B[0;7m^C(B[m Location      (B[0;7mM-U(B[m Undo[47;120H(B[0;7mM-A(B[m Set Mark     (B[0;7mM-](B[m To Bracket[48;2H(B[0;7mX(B[m Exit  [48;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace	   (B[0;7m^U(B[m Paste         (B[0;7m^J(B[m Justify[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[48;120H(B[0;7mM-6(B[m Copy[48;137H(B[0;7m^Q(B[m Where Was[2d    (B[0;1m[36mdef[34m bert_attention_prune[39m(B[m(self, layer_list, weight_list):[3;8H[1K	(B[0;1m[32m'''[39m(B[m[K[4d(B[0;1m[32m[1K Ex. layer_list = [0, 1, 3][5;12H[1K weight_list = ['Q', 'K'][39m(B[m[K[6;8H(B[0;1m[32m[1K	'''[39m(B[m[K[7d	modules_to_prune = [][8;8H[42m[1K	[49m(B[m[K[9d[1K	(B[0;1m[36mfor[39m(B[m layer (B[0;1m[36min[39m(B[m layer_list:[10;13H(B[0;1m[36mfor[39m(B[m weight (B[0;1m[36min[39m(B[m weight_list:[11;16H[1K	(B[0;1m[36mif[39m(B[m weight == (B[0;1m[32m'Q'[39m(B[m:[12;20H[1K modules_to_prune.append(self.pretrained.encoder.layer._modules[str(layer)].attention.self.query)[13;16H[1K	(B[0;1m[36melif[39m(B[m weight == (B[0;1m[32m'K'[39m(B[m:[K[14;21Hmodules_to_prune.append(self.pretrained.encoder.layer._modules[str(layer)].attention.self.key)[15;16H[1K	(B[0;1m[36melif[39m(B[m weight == (B[0;1m[32m'V'[39m(B[m:[16;20H[1K modules_to_prune.append(self.pretrained.encoder.layer._modules[str(layer)].attention.self.value)[17;17H(B[0;1m[36melse[39m(B[m:[18d[1K print((B[0;1m[32m'WARNING: Invalid pruned weight has been ignored.'[39m(B[m)[19;8H[42m[1K	[49m(B[m[K[20d(B[0;1m[36mfor[39m(B[m module (B[0;1m[36min[39m(B[m modules_to_prune:[K[21;9H    self.structured_prune(module)[24d(B[0;1m[36mif[39m(B[m __name__ == (B[0;1m[32m'__(B[0m[30m[43mmain(B[0;1m[32m__'[39m(B[m:[25d    device = (B[0;1m[32m'cuda'[39m(B[m (B[0;1m[36mif[39m(B[m torch.cuda.is_available() (B[0;1m[36melse[39m(B[m (B[0;1m[32m'cpu'[31m # [37m[43mTODO[26d[39;49m(B[m    prune_config = {[K[27;12H[1K (B[0;1m[32m"module"[39m(B[m: (B[0;1m[35mNone[39m(B[m,[28;12H[1K (B[0;1m[32m"scope"[39m(B[m: (B[0;1m[32m"local"[39m(B[m,[K[29;12H[1K (B[0;1m[32m"block_num"[39m(B[m: 64,[K[30;12H[1K (B[0;1m[32m"sparsity"[39m(B[m: 0.5[K[31d    }[K[32dmodel = DownstreamModel()[33;5Hmodel.to(device)[34;4H(B[0;1m[31m # prune_config['module'] = "fc1"[35;5H[39m(B[mmodule = model.pretrained.encoder.layer._modules[(B[0;1m[32m'0'[39m(B[m].attention.self.query.weight.detach()[36;4H(B[0;1m[31m # model.downstream_train()[37d(B[0m[42m    [38d[49m(B[m    model.load_downstream_model()[K[39;4H(B[0;1m[31m # model.check_sparsity(module=model.fc1)[40;5H[39m(B[macc_1 = model.downstream_test()[41d[42m    [49m(B[m[K[42dlayers_to_prune = list(range(12))[K[43;5Hweights_to_prune = [(B[0;1m[32m'Q'[39m(B[m](B[0;1m[31m #', 'K', 'V'][39m(B[m[K[44d[42m    [49m(B[m[K[45dprint((B[0;1m[32m'Pruing Configuraitons:'[39m(B[m)[K[24;19H(B[0;1m[32mmain[25;19H[39m(B[m[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31;6H[?12l[?25h[?25l[32;19H[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37;5H[?12l[?25h[?25l[38;19H[?12l[?25h[?25l[39d[?12l[?25h[?25l[40d[?12l[?25h[?25l[41;5H[?12l[?25h[?25l[42;19H[?12l[?25h[?25l[43d[?12l[?25h[?25l[44;5H[?12l[?25h[?25l[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;5Hprint((B[0;1m[32m'Block_num='[39m(B[m, prune_config[(B[0;1m[32m'block_num'[39m(B[m])[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;5Hprint((B[0;1m[32m'Layers to prune='[39m(B[m, layers_to_prune)[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;5Hprint((B[0;1m[32m'Weights to prune='[39m(B[m, weights_to_prune)[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;5H(B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m [0.5, 0.6, 0.7, 0.8](B[0;1m[31m # 0.9, 0.92, 0.95, 0.98, 1.00]:[45;19H[39m(B[m[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;4H(B[0;1m[31m # for i in [0.9, 0.95, 0.98, 1.00]:[45;19H[39m(B[m[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9Hprint((B[0;1m[32m'========== Prune after training ==========='[39m(B[m)[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9Hmodel.load_downstream_model()[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9Hprint((B[0;1m[32m"Sparsity=%f"[39m(B[m%i)[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9Hprune_config = {[19G[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;13H(B[0;1m[32m"module"[39m(B[m: (B[0;1m[32m'fc1'[39m(B[m,[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;13H(B[0;1m[32m"scope"[39m(B[m: (B[0;1m[32m"local"[39m(B[m,[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;13H(B[0;1m[32m"block_num"[39m(B[m: 64,[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;13H(B[0;1m[32m"sparsity"[39m(B[m: i[19G[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9H}[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;8H(B[0;1m[31m # model.structured_prune(module=model.fc1)[45;19H[39m(B[m[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9Hmodel.bert_attention_prune(layers_to_prune, weights_to_prune)[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9Hacc_2 = model.downstream_test()[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;9Hprint(f(B[0;1m[32m"Before pruning: acc={acc_1}. After pruning: acc={acc_2}."[39m(B[m)[45;19H[?12l[?25h[?25l7[2;46r8[46d
[1;48r[45;1H[?12l[?25h[?25l[44;19H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[40;10H[?12l[?25h[?25l[39;19H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l [?12l[?25h[?25l0[?12l[?25h[?25l.[?12l[?25h[?25l6[?12l[?25h[?25l,[?12l[?25h[?25l	[?12l[?25h[?25l0[?12l[?25h[?25l.[?12l[?25h[?25l7[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25l0[?12l[?25h[?25l.[?12l[?25h[?25l	[?12l[?25h[?25l][?12l[?25h[?25l[1;149H(B[0;7mModified(B[m[30;34H:(B[0;1m[31m # 0.9, 0.92, 0.95, 0.98, 1.00]:[30;35H[39m(B[m[?12l[?25h[?25l[46d(B[0;7mSave modified buffer?                                                                                                                                         [47;1H Y(B[m Yes[K[48d(B[0;7m N(B[m No  [48;17H(B[0;7m^C(B[m Cancel[K[46;23H[?12l[?25h[?25l[47d(B[0;7m^G(B[m Help[47;40H(B[0;7mM-D(B[m DOS Format[47;79H(B[0;7mM-A(B[m Append[47;118H(B[0;7mM-B(B[m Backup File[48d(B[0;7m^C(B[m Cancel	         [48;40H(B[0;7mM-M(B[m Mac Format[48;79H(B[0;7mM-P(B[m Prepend[48;118H(B[0;7m^T(B[m Browse[46d(B[0;7mFile Name to Write: bert_inference.py(B[m[?12l[?25h[?25l[46;72H[1K	(B[0;7m[ Writing... ](B[m[K[1;149H(B[0;7m        (B[m[46;70H(B[0;7m[ Wrote 252 lines ](B[m[J[48d[?12l[?25h[48;1H[?1049l[23;0;0t[?1l>[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ 
[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ 
[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ python bert_inference.py 
[?2004lA parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
A parameter name that contains `beta` will be renamed internally to `bias`. Please use a different name to suppress this warning.
A parameter name that contains `gamma` will be renamed internally to `weight`. Please use a different name to suppress this warning.
INFO: loaded downstream model from ./ckpts/downstream_model_unpruned.pth
Pruing Configuraitons:
Block_num= 64
Layers to prune= [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Weights to prune= ['Q']
========== Prune after training ===========
INFO: loaded downstream model from ./ckpts/downstream_model_unpruned.pth
Sparsity=0.500000
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...

INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
Before pruning: acc=87.91666666666667. After pruning: acc=88.22916666666667.
========== Prune after training ===========
INFO: loaded downstream model from ./ckpts/downstream_model_unpruned.pth
Sparsity=0.600000
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
Before pruning: acc=87.91666666666667. After pruning: acc=78.54166666666667.
========== Prune after training ===========
INFO: loaded downstream model from ./ckpts/downstream_model_unpruned.pth
Sparsity=0.700000
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...

INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
Before pruning: acc=87.91666666666667. After pruning: acc=66.875.
========== Prune after training ===========
INFO: loaded downstream model from ./ckpts/downstream_model_unpruned.pth
Sparsity=0.800000
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
INFO: Finished pruning.
INFO: Pruning...
^CTraceback (most recent call last):
  File "/mnt/home/cj323/mase-pruning-test/bert_inference.py", line 249, in <module>
    model.bert_attention_prune(layers_to_prune, weights_to_prune)
  File "/mnt/home/cj323/mase-pruning-test/bert_inference.py", line 209, in bert_attention_prune
    self.structured_prune(module)
  File "/mnt/home/cj323/mase-pruning-test/bert_inference.py", line 185, in structured_prune
    mask = rank_functions.block_rank_fn_local(data, prune_config, sparsity, silent=silent)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/cj323/mase-pruning-test/rank_functions.py", line 56, in block_rank_fn_local
    block_mask = get_block_mask_local(data, config, sparsity)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/cj323/mase-pruning-test/rank_functions.py", line 34, in get_block_mask_local
    block_norms[i, b_id] = block_mixed_norm(data[i, block_size*b_id : block_size*(b_id+1)])  # get the norm of a sliced block tensor
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/cj323/mase-pruning-test/rank_functions.py", line 11, in block_mixed_norm
    return torch.dot(torch.Tensor(list(norm_factors.values())), torch.Tensor(norms))  # weighted sum of different norms
                                                                ^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt

]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ ^C[?2004l[?2004h[?2004l
]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ ^C[?2004l[?2004h[?2004l
]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ 
[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ nano bert_inference.py 
[?2004l[?2004h[?1049h[22;0;0t[1;48r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[46;73H(B[0;7m[ Reading... ](B[m[46;71H(B[0;7m[ Read 252 lines ](B[m[H(B[0;7m  GNU nano 5.6.1                                                         bert_inference.py                                                                    [1;157H(B[m[47d(B[0;7m^G(B[m Help[47;18H(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is	   (B[0;7m^K(B[m Cut[47;69H(B[0;7m^T(B[m Execute[86G(B[0;7m^C(B[m Location[103G(B[0;7mM-U(B[m Undo[47;120H(B[0;7mM-A(B[m Set Mark     (B[0;7mM-](B[m To Bracket[48d(B[0;7m^X(B[m Exit[48;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace	   (B[0;7m^U(B[m Paste[48;69H(B[0;7m^J(B[m Justify[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[48;120H(B[0;7mM-6(B[m Copy[48;137H(B[0;7m^Q(B[m Where Was[2d(B[0;1m[36mimport[39m(B[m torch[3d(B[0;1m[36mimport[39m(B[m numpy (B[0;1m[36mas[39m(B[m np[4d(B[0;1m[36mfrom[39m(B[m datasets (B[0;1m[36mimport[39m(B[m load_dataset[5d(B[0;1m[36mfrom[39m(B[m transformers (B[0;1m[36mimport[39m(B[m BertTokenizer, BertModel, AdamW[6d(B[0;1m[36mfrom[39m(B[m torch.utils.data (B[0;1m[36mimport[39m(B[m DataLoader, Dataset[8d(B[0;1m[36mimport[39m(B[m utils[9d(B[0;1m[36mimport[39m(B[m rank_functions[11d(B[0;1m[36mclass[39m(B[m BertDataset(Dataset):[12;5H(B[0;1m[36mdef[34m __init__[39m(B[m(self, split):[13;9Hself.dataset = load_dataset(path=(B[0;1m[32m'lansinuote/ChnSentiCorp'[39m(B[m, split=split)[15;5H(B[0;1m[36mdef[34m __len__[39m(B[m(self):[16;9H(B[0;1m[36mreturn[39m(B[m len(self.dataset)[18;5H(B[0;1m[36mdef[34m __getitem__[39m(B[m(self, i):[19;9Htext = self.dataset[i][(B[0;1m[32m'text'[39m(B[m][20;9Hlabel = self.dataset[i][(B[0;1m[32m'label'[39m(B[m][21;9H(B[0;1m[36mreturn[39m(B[m text, label[24d[42m    [25d(B[0;1m[31m# print(len(loader))[26d# input_ids.shape, attention_mask.shape, token_type_ids.shape, labels[27d#æ¨¡åž‹è¯•ç®—[28d# out = pretrained(input_ids=input_ids,[29d#            attention_mask=attention_mask,[30d#            token_type_ids=token_type_ids)[31d# out.last_hidden_state.shape[38d[36mclass[39m(B[m DownstreamModel(torch.nn.Module):[39;5H(B[0;1m[36mdef[34m __init__[39m(B[m(self):[40;9Hsuper().__init__()[41;8H(B[0;1m[31m # print(len(dataset), dataset[0])[42;9H[39m(B[mself.tokenizer = BertTokenizer.from_pretrained((B[0;1m[32m'bert-base-chinese'[39m(B[m)[43;9Hself.pretrained = BertModel.from_pretrained((B[0;1m[32m'bert-base-chinese'[39m(B[m)[44;9Hself.pretrained.to(device)(B[0;1m[31m # [37m[43mTODO[45;12H[39;49m[31m # pretrained = BertModel.from_pretrained('tmp')  # local checkpoint[2d[39m(B[m[?12l[?25h[?25l[47;18H[14X[47;32H(B[0;7mM-C(B[m Case Sens 	              (B[0;7mM-B(B[m Backwards   [86G        (B[0;7m^P(B[m Older         [47;120H     (B[0;7m^T(B[m Go To Line[K[48;2H(B[0;7mC(B[m Cancel[48;18H[14X[48;32H(B[0;7mM-R(B[m Reg.exp. 	              (B[0;7m^R(B[m Replace      [86G        (B[0;7m^N(B[m Newer[K[47;138H[A(B[0;7mSearch:                                                                                                                                                       [46;9H(B[m[?12l[?25h[?25l(B[0;7ml(B[m[?12l[?25h[?25l(B[0;7ma(B[m[?12l[?25h[?25l(B[0;7my(B[m[?12l[?25h[?25l(B[0;7me(B[m[?12l[?25h[?25l(B[0;7mr(B[m[?12l[?25h[?25l(B[0;7ms(B[m[?12l[?25h[?25l(B[0;7m_(B[m[?12l[?25h[?25l(B[0;7mt(B[m[?12l[?25h[?25l(B[0;7mi(B[m[?12l[?25h[?25l(B[0;7mo(B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l[Z(B[0;7m [Z(B[m[?12l[?25h[?25l(B[0;7mo(B[m[?12l[?25h[?25l[K[47;18H(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is	   (B[0;7m^K(B[m Cut           (B[0;7m^T(B[m Execute[86G(B[0;7m^C(B[m Location      (B[0;7mM-U(B[m Undo[47;120H(B[0;7mM-A(B[m Set Mark     (B[0;7mM-](B[m To Bracket[48;2H(B[0;7mX(B[m Exit  [48;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace	   (B[0;7m^U(B[m Paste         (B[0;7m^J(B[m Justify[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[48;120H(B[0;7mM-6(B[m Copy[48;137H(B[0;7m^Q(B[m Where Was[2;8H[1K	(B[0;1m[36mfor[39m(B[m module (B[0;1m[36min[39m(B[m modules_to_prune:[3;12H[1K self.structured_prune(module)[4d[K[5d[K[6d(B[0;1m[36mif[39m(B[m __name__ == (B[0;1m[32m'__main__'[39m(B[m:[K[7;5Hdevice = (B[0;1m[32m'cuda'[39m(B[m (B[0;1m[36mif[39m(B[m torch.cuda.is_available() (B[0;1m[36melse[39m(B[m (B[0;1m[32m'cpu'[31m # [37m[43mTODO[8d[39;49m(B[m    prune_config = {[9;12H[1K (B[0;1m[32m"module"[39m(B[m: (B[0;1m[35mNone[39m(B[m,[10;13H(B[0;1m[32m"scope"[39m(B[m: (B[0;1m[32m"local"[39m(B[m,[11;12H[1K (B[0;1m[32m"block_num"[39m(B[m: 64,[12;12H[1K (B[0;1m[32m"sparsity"[39m(B[m: 0.5[K[13;5H}[K[14dmodel = DownstreamModel()[15;5Hmodel.to(device)[K[16;4H(B[0;1m[31m # prune_config['module'] = "fc1"[17;5H[39m(B[mmodule = model.pretrained.encoder.layer._modules[(B[0;1m[32m'0'[39m(B[m].attention.self.query.weight.detach()[18;4H(B[0;1m[31m # model.downstream_train()[19d(B[0m[42m    [49m(B[m[K[20dmodel.load_downstream_model()[K[21;4H(B[0;1m[31m # model.check_sparsity(module=model.fc1)[22;5H[39m(B[macc_1 = model.downstream_test()[23d[42m    [24d[49m(B[m    [30m[43mlayers_to[39;49m(B[m_prune = list(range(12))[25d    weights_to_prune = [(B[0;1m[32m'Q'[39m(B[m](B[0;1m[31m #', 'K', 'V'][26d(B[0m[42m    [49m(B[m[K[27d    print((B[0;1m[32m'Pruing Configuraitons:'[39m(B[m)[28d    print((B[0;1m[32m'Block_num='[39m(B[m, prune_config[(B[0;1m[32m'block_num'[39m(B[m])[29d    print((B[0;1m[32m'Layers to prune='[39m(B[m, layers_to_prune)[30d    print((B[0;1m[32m'Weights to prune='[39m(B[m, weights_to_prune)[31d    (B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m [0.5, 0.6, 0.7, 0.8]:(B[0;1m[31m # 0.9, 0.92, 0.95, 0.98, 1.00]:[32;4H # for i in [0.9, 0.95, 0.98, 1.00]:[33;9H[39m(B[mprint((B[0;1m[32m'========== Prune after training ==========='[39m(B[m)[34;9Hmodel.load_downstream_model()[35;9Hprint((B[0;1m[32m"Sparsity=%f"[39m(B[m%i)[36;9Hprune_config = {[37;13H(B[0;1m[32m"module"[39m(B[m: (B[0;1m[32m'fc1'[39m(B[m,[38;12H[1K (B[0;1m[32m"scope"[39m(B[m: (B[0;1m[32m"local"[39m(B[m,[K[39;12H[1K (B[0;1m[32m"block_num"[39m(B[m: 64,[40;9H    (B[0;1m[32m"sparsity"[39m(B[m: i[K[41;8H }[K[42;8H(B[0;1m[31m # model.structured_prune(module=model.fc1)[39m(B[m[K[43;9Hmodel.bert_attention_prune(layers_to_prune, weights_to_prune)[K[44;9Hacc_2 = model.downstream_test()[K[45;9Hprint(f(B[0;1m[32m"Before pruning: acc={acc_1}. After pruning: acc={acc_2}."[39m(B[m)[K[24;5Hlayers_to[25;5H[?12l[?25h[?25l[26d[?12l[?25h[?25l[A[?12l[?25h[?25lw[?12l[?25h[?25le[?12l[?25h[?25li[?12l[?25h[?25l	[?12l[?25h[?25lh[?12l[?25h[?25lt[?12l[?25h[?25ls[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lo[?12l[?25h[?25l_[?12l[?25h[?25l	[?12l[?25h[?25lr[?12l[?25h[?25lu[?12l[?25h[?25ln[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25l	[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l][?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;149H(B[0;7mModified(B[m[25;26H[1P[?12l[?25h[?25l(B[0;1m[32mK'[39m(B[m](B[0;1m[31m #', 'K', 'V'][25;27H[39m(B[m[?12l[?25h[?25l[46d(B[0;7mSave modified buffer?                                                                                                                                         [47;1H Y(B[m Yes[K[48d(B[0;7m N(B[m No  [48;17H(B[0;7m^C(B[m Cancel[K[46;23H[?12l[?25h[?25l[47d(B[0;7m^G(B[m Help[47;40H(B[0;7mM-D(B[m DOS Format[47;79H(B[0;7mM-A(B[m Append[47;118H(B[0;7mM-B(B[m Backup File[48d(B[0;7m^C(B[m Cancel	         [48;40H(B[0;7mM-M(B[m Mac Format[48;79H(B[0;7mM-P(B[m Prepend[48;118H(B[0;7m^T(B[m Browse[46d(B[0;7mFile Name to Write: bert_inference.py(B[m[?12l[?25h[?25l[46;72H[1K	(B[0;7m[ Writing... ](B[m[K[1;149H(B[0;7m        (B[m[46;70H(B[0;7m[ Wrote 252 lines ](B[m[J[48d[?12l[?25h[48;1H[?1049l[23;0;0t[?1l>[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ 
[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ 
[?2004l]0;cj323@ee-kraken:~/mase-pruning-test[?2004h(mase) [cj323@ee-kraken mase-pruning-test]$ exit
[?2004lexit

Script done on 2024-07-29 08:29:11+01:00 [COMMAND_EXIT_CODE="0"]
